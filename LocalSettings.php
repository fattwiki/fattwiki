<?php
# This file was automatically generated by the MediaWiki 1.35.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "fattwiki";
$wgMetaNamespace = "Fattwiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "/wiki";
$wgArticlePath = "/view/$1";

## The protocol and server name to use in fully-qualified URLs
$wgServer = getenv('WIKI_SERVER');

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [ '1x' => "$wgResourceBasePath/resources/assets/wiki.png" ];

$wgFavicon = "$wgScriptPath/favicon.ico";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = getenv('WIKI_EMAIL');
$wgPasswordSender = getenv('WIKI_EMAIL');

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = getenv('WIKI_EMAIL_AUTHENTICATION');

$wgEmailConfirmToEdit = getenv('WIKI_EMAIL_CONFIRMTOEDIT');

## Database settings
$wgDBtype = "mysql";
$wgDBserver = getenv('MARIADB_SERVER');
$wgDBname = getenv('MARIADB_DATABASE');
$wgDBuser = getenv('MARIADB_USER');
$wgDBpassword = getenv('MARIADB_PASSWORD');

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
#$wgUseImageMagick = true;
#$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = false;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "C.UTF-8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "en";

$wgSecretKey = getenv("WIKI_SECRET_KEY");

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = getenv("WIKI_UPGRADE_KEY");

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "vector-2022";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Vector' );

# End of automatically generated settings.
# Add more configuration options below.

wfLoadExtension( 'WikiEditor' ); # Source editor
wfLoadExtension( 'VisualEditor' );

// Enable by default for everybody
$wgDefaultUserOptions['visualeditor-enable'] = 1;
$wgDefaultUserOptions['visualeditor-enable-experimental'] = 1;
$wgDefaultUserOptions['visualeditor-newwikitext'] = 1; 
$wgVisualEditorEnableWikitext = true;

// Optional: Set VisualEditor as the default for anonymous users
// otherwise they will have to switch to VE
// $wgDefaultUserOptions['visualeditor-editor'] = "visualeditor";
//$wgHiddenPrefs[] = 'visualeditor-newwikitext';

// Per default, the VisualEditor only works with Namespace 0 (NS_MAIN),
// i.e. the main article namespace. To change this, adapt the following example
// that enables namespaces 0 (main), 2 (user) and 102 (some user specific one)
$wgVisualEditorAvailableNamespaces = [
    NS_MAIN => true,
    NS_USER => true,
    102 => true,
    "_merge_strategy" => "array_plus"
];

wfLoadExtension( 'TemplateStyles' );

wfLoadExtension( 'Scribunto' );
$wgScribuntoDefaultEngine = 'luastandalone';

wfLoadExtension( 'DeleteBatch' );

wfLoadExtension( 'ParserFunctions' );
$wgPFEnableStringFunctions = true;

wfLoadExtension( 'PortableInfobox' );
wfLoadExtension( 'Cite' );
wfLoadExtension( 'MassEditRegex' );
$wgGroupPermissions['sysop']['masseditregex'] = true;

wfLoadExtension('DynamicPageList3');
$wgDplSettings['maxCategoryCount'] = 6;

wfLoadExtension('TemplateData'); # Allows you to set up template instructions that work with VisualEditor
wfLoadExtension('SearchExtraNS'); 
wfLoadExtension('Poem');
wfLoadExtension('TitleKey'); # Allows search to match leading lowercase letters

$wgSMTP = [
	'host' => getenv('SMTP_HOST'),
	'IDHost' => getenv('APACHE_SERVER_NAME'),
	'localhost' => getenv('APACHE_SERVER_NAME'),
	'port' => getenv('SMTP_PORT'),
	'auth' => true,
	'username' => getenv('SMTP_USER'),
	'password' => getenv('SMTP_PASS')
];

wfLoadExtensions(['ConfirmEdit', 'ConfirmEdit/QuestyCaptcha']);

$wgMainCacheType = CACHE_ANYTHING;
$wgCaptchaTriggers['createaccount'] = true;
$wgCaptchaTriggers['badlogin']      = true;

$wgCaptchaQuestions = [
	'What is the name of the podcast?' => 'Friends at the Table'
];

wfLoadExtension( 'MultimediaViewer' ); 
wfLoadExtension( 'CommonsMetadata' ); # Necessary for MultimediaViewer to display additional data
